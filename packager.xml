<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================  -->
<!-- redCOMPONENT Template Framework packager                            -->
<!-- ==================================================================  -->
<project name="com_redshop" default="dist">
    <!-- Do initialization stuff -->
    <property file="build.properties" override="true" />

    <property
            name="extension"
            value="${comp.name}"
            override="true" />

    <!-- Folder where the redSHOP repository is located  -->
    <property
            name="extpath"
            value="${repo.dir}"
            override="true" />

    <!-- Load extension property in XML file -->
    <xmlproperty file="${extpath}/pkg_${extension}.xml" prefix="extensionDetails" keepRoot="false" />

    <!-- Get extension version from XML -->
    <property
            name="version"
            value="${extensionDetails.version}"
            override="true"/>

    <!-- Target dir where packages will be created  -->
    <property
            name="targetdir"
            value="${package.dir}/package-${extension}-v${version}"
            override="true" />

    <!-- ============================================  -->
    <!-- Create packages folder                        -->
    <!-- ============================================  -->
    <target name="prepare">
        <!-- Check if the target folder exists. If not, create it -->
        <if>
            <available file="${targetdir}" type="dir" />
            <then>
                <echo msg="Removing old ${targetdir}" />
                <delete dir="${targetdir}" />
            </then>
        </if>
        <echo msg="Making directory to store the packages at ${targetdir}" />
        <mkdir dir="${targetdir}" />

    </target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <!-- Copy the source files to the target folder -->

    <target name="build" depends="prepare">

        <echo msg="Copying CODE folder to build directory..." />
        <copy todir="${targetdir}/adaptiveimages">
            <fileset dir="${extpath}/code">
                <exclude name=".*" />
            </fileset>
        </copy>

        <echo msg="Copying redCORE LIBRARIES folder to build directory..."/>
        <copy todir="${targetdir}/redCORE">
            <fileset dir="${extpath}/redCORE">
                <include name="**"/>
                <exclude name=".*"/>
                <exclude name="build.*"/>
                <exclude name="*.md"/>
                <!-- reduce redCORE package -->
                <exclude name="media/redcore/js/lib/jquery-ui/jquery-ui.js"/>
                <exclude name="media/redcore/css/lib/bootstrap/css/bootstrap.css"/>
            </fileset>
        </copy>

        <!-- Languages -->
        <copy file="${extpath}/pkg_${extension}.xml" tofile="${package.dir}/pkg_${extension}.xml" overwrite="true" />

    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       -->
    <!-- ============================================  -->
    <target name="dist" depends="build">
        <echo msg="Creating ZIP archive..." />
        <mkdir dir="${package.dir}/packages" />

        <zip destfile="${package.dir}/packages/plg_system_${extension}.zip">
            <fileset dir="${targetdir}/${extension}">
                <include name="**" />
                <exclude name=".*" />
            </fileset>
        </zip>

        <zip destfile="${package.dir}/packages/redCORE.zip">
            <fileset dir="${targetdir}/redCORE">
                <include name="**" />
                <exclude name=".*" />
            </fileset>
        </zip>

        <zip destfile="${package.dir}/pkg_${extension}.zip">
            <fileset dir="${package.dir}">
                <include name="packages/**" />
                <include name="pkg_${extension}.xml" />
            </fileset>
        </zip>

        <echo msg="Files copied and compressed in build directory OK!" />
    </target>
</project>